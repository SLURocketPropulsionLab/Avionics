#!/usr/bin/python

import smbus
import math
import os
from gps import *
from time import *
import threading
import serial
import smbus
import time
import datetime


sleeptime=1/30
alt_divider=10  #every x loops, take a new alt measurment 


# define a timestamp format you like
now=datetime.dateime()
FORMAT = '%H%M%S'
path = 'Rocketlog.txt'
new_path = '%s_%s' % (now.strftime(FORMAT), path)
f=open(new_path, 'a')
brakes=open('brakes_control.txt','a')

altimeter = serial.Serial(
              
               port='/dev/ttyAMA0',
               baudrate = 9600,
               parity=serial.PARITY_NONE,
               stopbits=serial.STOPBITS_ONE,
               bytesize=serial.EIGHTBITS,
               timeout=1/20
           )


  
  
  def density(alt):
    if alt >= 27000:
        roh = Roh[10]
    elif alt >= 24000:
        roh = Roh[9]
    elif alt >= 21000:
        roh = Roh[8]
    elif alt >= 18000:
        roh = Roh[7]
    elif alt >= 15000:
        roh = Roh[6]
    elif alt >= 12000:
        roh = Roh[5]
    elif alt >= 9000:
        roh = Roh[4]
    elif alt >= 6000:
        roh = Roh[3]
    elif alt >= 3000:
        roh = Roh[2]
    else:
        roh = Roh[1]
    return roh

Alt_proj=0
Alt_current=0
V_current=0
g=32.2 #ft/s^2
Drag= .42
Roh = [0.00217539, 0.00198698, 0.00181132,0.00164779, 0.00149581,0.00135479,0.00122417,0.00110341,0.000991984,0.000889378]
Area= 5
Mass = 5
Second_Alt = 0
altcount=0


while True:


    starttime = time.time()
    try:
        Alt_current = int(altimeter.readline())
    except Nullreadline:
        Alt_current = 0


    sleep(sleeptime)  

    remainder = altcount % alt_divider

    if remainder = 0:
        endtime = time.time()
        try:
            Second_Alt=int(altimeter.readline())
        except Null_secondalt:
            Second_Alt = Alt_current
            
        V_current = (abs(Alt_current - Second_Alt))/(abs(starttime-endtime))
    
    else:
        Second_Alt = Alt_current
        endtime=starttime
    
Alt_proj = (Second_Alt + ((V_current^2) / ( 2 * ((g+Drag*((density(Second_Alt)*(V_current^2))/2)*Area)/Mass))))

if Alt_proj >= 30000
  brakes.write(1)
  brake=1
else
  brakes.write(0)
  brake=0
  

if Second_Alt >= 30000
  brakes.write(0)
  brake=0
if Alt_current >= 30000
  brakes.write(0)
  brake=0  
  
  
 
    now = datetime.datetime.now()
    timestamp = now.strftime("%H:%M")
    #Timestamp,Strattoaltitude,Current Velocity,GPSAlt,Latitude,Longitude,Xaccel,Yaccel,Zaccel,Projected Alt
    writestring = str(timestamp)+","+str(Second_Alt)+","+str(V_current)+","+str(gpsd.fix.altitude)+","+str(gpsd.fix.latitude)+","+str(gpsd.fix.longitude)+","
    +str(brake)+","+str(accel_xout_scaled)+","+str(accel_yout_scaled)+","+str(accel_zout_scaled)+","+str(Alt_proj)+","
    f.write(writestring)
    

    
    altcount=altcount+1  


   
